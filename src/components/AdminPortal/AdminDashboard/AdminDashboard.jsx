import React, { useState, useEffect } from 'react';
import axios from 'axios';
import styles from './AdminDashboard.module.css';
import { useAccessibility } from '../../UserAccessibility/AccessibilityContext';
import { jsPDF } from 'jspdf';
import 'jspdf-autotable';
import { useNavigate } from 'react-router-dom';
import NotificationContent from './NotificationContent'; // Import the NotificationContent component
import NavBar from '../NavBar/NavBar';
import Statistics from '../Statistics/Statistics';
import Announcement from '../Announcement/Announcement';
import { useAuth } from '../../AuthProvider/AuthProvider';
import FIRDetailsPage from '../FirDetailsPage/FirDetailsPage';

const AdminDashboard = () => {
    const {user}=useAuth();
    const navigate = useNavigate();
    const goToHome = () => {
        navigate('/');
    };
    const goToContact = () => {
        navigate('/contact');
    };
    const { colorMode, textSize } = useAccessibility();

    const [firData, setFirData] = useState([]);
    const [selectedFIR, setSelectedFIR] = useState(null);
    const [currentPage, setCurrentPage] = useState(1);
    const [currentView,setCurrentView]=useState('firs');
    const itemsPerPage = 3;

    // Fetch FIR data on component mount
    const fetchFIRs = async () => {
        try {
            const response = await axios.get(`http://localhost:5000/admin/firs/${user.AdminId}`);
            setFirData(response.data);
            console.log(response.data);
        } catch (error) {
            console.error('Error fetching FIRs:', error);
        }
    };

    useEffect(() => {

        fetchFIRs();
    }, [user.AdminId]);
    const goBack=()=>{
        setCurrentView('firs');
    }

    const indexOfLastItem = currentPage * itemsPerPage;
    const indexOfFirstItem = indexOfLastItem - itemsPerPage;
    const currentFIRs = firData.slice(indexOfFirstItem, indexOfLastItem);
    const totalPages = Math.ceil(firData.length / itemsPerPage);

    const handlePageChange = (pageNumber) => {
        setCurrentPage(pageNumber);
    };

    const handleRowClick = (fir) => {
        setSelectedFIR(fir);
    };

    const handleDownloadPDF = () => {
        if (!selectedFIR) return;
    
        const doc = new jsPDF();
        const { FIR_ID, AccountName, AccountID, FullName, ContactNumber, 
                Email, ResidentialAddress, IncidentDetails, TypeOfComplaint, 
                SupportingFiles, Comments, StatusOfFir, DateFiled, LastUpdatedDate } = selectedFIR;
    
        // Add Title
        doc.setFontSize(18);
        doc.setTextColor('#333');
        doc.text(`FIR Details: #${FIR_ID}`, 105, 20, { align: 'center' });
    
        // Add a line under the title
        doc.setDrawColor(200, 200, 200);
        doc.line(20, 25, 190, 25);
    
        // Prepare table data
        const tableData = [
            ['Account Name', AccountName],
            ['Account ID', AccountID],
            ['Full Name', FullName],
            ['Contact Number', ContactNumber],
            ['Email', Email || 'N/A'],
            ['Residential Address', ResidentialAddress],
            ['Type of Complaint', TypeOfComplaint],
            ['Incident Details', IncidentDetails],
            ['Status of FIR', StatusOfFir],
            ['Date Filed', DateFiled],
            ['Last Updated', LastUpdatedDate],
            ['Comments', Comments || 'No comments available'],
        ];
    
        // Add table with headers and data
        doc.autoTable({
            head: [['Field', 'Details']], // Table headers
            body: tableData,
            startY: 35, // Start the table at Y position 35
            columnStyles: {
                0: { fontStyle: 'bold' },  // Bold the first column
                1: { maxWidth: 120 } // Restrict the second column width to 120
            },
            margin: { top: 10 },
            bodyStyles: { valign: 'top' }, // Align text to the top
        });
    
        // Add Supporting Files section if applicable, continuing the same page
        if (SupportingFiles.length > 0) {
            const filesData = SupportingFiles.map(file => [file]);
    
            // Add a new table for Supporting Files
            doc.autoTable({
                head: [['Supporting Files ID']],
                body: filesData,
                startY: doc.autoTable.previous.finalY + 15,
                columnStyles: { 0: { maxWidth: 180 } },
                margin: { top: 10 },
                bodyStyles: { valign: 'top' },
            });
        }
    
        // Footer
        doc.setFontSize(10);
        doc.setFont('helvetica', 'italic');
        doc.text('Generated by eFIR Platform', 105, doc.autoTable.previous.finalY + 20, { align: 'center' });
    
        // Save the PDF
        doc.save(`FIR_Details_${FIR_ID}.pdf`);
    };

    const containerStyle = {
        backgroundColor: colorMode === 'dark' ? 'black' : '#ffffff',
        color: colorMode === 'dark' ? '#f0e68c' : '#333333',
        fontSize: `${textSize}px`,
    };

    const sidebarStyle = {
        backgroundColor: colorMode === 'dark' ? '#444444' : '#003366',
        color: colorMode === 'dark' ? '#f0e68c' : '#ffffff',
    };

    const buttonStyle = {
        backgroundColor: colorMode === 'dark' ? '#444444' : '#28a745',
        color: colorMode === 'dark' ? '#f0e68c' : '#ffffff',
    };

    const handleClick=(str)=>{
        setCurrentView(str);
    }
    

    return (
        <div className={styles.dashboard} style={containerStyle}>
            <div className={styles.sidebar} style={sidebarStyle}>
                <h2>Admin Dashboard</h2>
                <ul>
                    <li><a style={{ cursor: 'pointer' }} onClick={()=>{handleClick('firs')}}>FIRs</a></li>
                    <li><a style={{ cursor: 'pointer' }} onClick={()=>{handleClick('notifications')}}>Notifications</a></li>
                    <li><a style={{ cursor: 'pointer' }} onClick={()=>{handleClick('statistics')}}>Statistics</a></li>
                    <li><a style={{ cursor: 'pointer'}} onClick={()=>{handleClick('announcements')}}>Announcements</a></li>
                </ul>
            </div>

            <div className={styles.mainContent}>
                {currentView==='firs'?(
                    <>
                    <header className={styles.header}>
                        <div className={styles.userInfo}>
                            <p>Welcome, {user.username}</p>
                        </div>
                    </header>

                    <section className={styles.firOverviewSection}>
                        <h3>Your FIRs Overview</h3>
                        <table className={styles.firTable}>
                            <thead>
                                <tr>
                                    <th>FIR Number</th>
                                    <th>Status</th>
                                    <th>Date Filed</th>
                                    <th>Last Update</th>
                                    <th>Details</th>
                                </tr>
                            </thead>
                            <tbody>
                                {currentFIRs.map((fir) => (
                                    <tr
                                        key={fir._id}
                                        onClick={() => handleRowClick(fir)}
                                        className={styles.tableRow}
                                    >
                                        <td>{fir.FIR_ID}</td>
                                        <td>{fir.StatusOfFir}</td>
                                        <td>{fir.DateFiled}</td>
                                        <td>{fir.LastUpdatedDate}</td>
                                        <td>
                                            <button
                                                onClick={(e) => { 
                                                    e.stopPropagation(); 
                                                    setSelectedFIR(fir); 
                                                    setCurrentView('firDetails');
                                                }} 
                                                style={buttonStyle}
                                            >
                                                View Details
                                            </button>
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>

                        {/* Pagination */}
                        <div className={styles.pagination}>
                            <button
                                onClick={() => handlePageChange(currentPage - 1)}
                                disabled={currentPage === 1}
                            >
                                Previous
                            </button>
                            {Array.from({ length: totalPages }, (_, index) => (
                                <button
                                    key={index + 1}
                                    onClick={() => handlePageChange(index + 1)}
                                    className={currentPage === index + 1 ? styles.activePage : ''}
                                >
                                    {index + 1}
                                </button>
                            ))}
                            <button
                                onClick={() => handlePageChange(currentPage + 1)}
                                disabled={currentPage === totalPages}
                            >
                                Next
                            </button>
                        </div>
                    </section>

                    {selectedFIR && (
                        <section className={styles.firDetailsSection}>
                            <h3>FIR Details: #{selectedFIR.FIR_ID}</h3>
                            <p><strong>Account Name:</strong> {selectedFIR.AccountName}</p>
                            <p><strong>Full Name:</strong> {selectedFIR.FullName}</p>
                            <p><strong>Contact Number:</strong> {selectedFIR.ContactNumber}</p>
                            <p><strong>Email:</strong> {selectedFIR.Email}</p>
                            <p><strong>Address:</strong> {selectedFIR.ResidentialAddress}</p>
                            <p><strong>Status:</strong> {selectedFIR.StatusOfFir}</p>
                            <p><strong>Type of Complaint:</strong> {selectedFIR.TypeOfComplaint}</p>
                            <p><strong>Date Filed:</strong> {selectedFIR.DateFiled}</p>
                            <p><strong>Last Update:</strong> {selectedFIR.LastUpdatedDate}</p>
                            <p><strong>Comments:</strong> {selectedFIR.Comments || "No comments added."}</p>
                            <button
                                onClick={handleDownloadPDF}
                                style={buttonStyle}
                            >
                                Download FIR Details PDF
                            </button>
                            <button
                                onClick={() => setSelectedFIR(null)}
                                style={buttonStyle}
                                className={styles.btn2}
                            >
                                Back to Overview
                            </button>
                        </section>
                    )}
                </>
                ):(<></>)}
                {currentView==='firDetails'?(
                    <FIRDetailsPage fir={selectedFIR} goBack={goBack}  />
                ):(<></>)}
                {currentView==='notifications'?(
                    <NotificationContent />
                ):(<></>)}
                {currentView==='statistics'?(
                    <Statistics/>
                ):(<></>)}
                {currentView==='announcements'?(
                    <Announcement/>
                ):(<></>)}

            </div>
        </div>
    );
};

export default AdminDashboard;
